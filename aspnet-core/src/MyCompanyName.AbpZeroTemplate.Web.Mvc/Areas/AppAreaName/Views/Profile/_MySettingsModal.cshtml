@using Abp.Application.Services.Dto
@using Abp.Authorization.Users
@using Abp.Timing;
@using MyCompanyName.AbpZeroTemplate.Authorization.Users
@using MyCompanyName.AbpZeroTemplate.Web.Areas.AppAreaName.Models.Common.Modals
@using MyCompanyName.AbpZeroTemplate.Web.Areas.AppAreaName.Models.Profile
@model MySettingsViewModel

@await Html.PartialAsync("~/Areas/AppAreaName/Views/Common/Modals/_ModalHeader.cshtml", new ModalHeaderViewModel(L("MySettings")))

<div class="modal-body">
    <ul class="nav nav-tabs  m-tabs-line" role="tablist">
        <li class="nav-item m-tabs__item">
            <a href="#MySettingsTab" class="nav-link m-tabs__link active" data-toggle="tab" role="tab">
                @L("Profile")
            </a>
        </li>
        <li class="nav-item m-tabs__item">
            <a href="#TwoFactorLoginTab" data-toggle="tab" role="tab" class="nav-link m-tabs__link">
                @L("TwoFactorLogin")
            </a>
        </li>
    </ul>
    <div class="tab-content">
        <div class="tab-pane active" id="MySettingsTab">

            <form name="MySettingsModalForm" class="m-form">
                <div class="form-group">
                    <label for="Name">@L("Name")</label>
                    <input id="Name" class="form-control edited" type="text" name="Name" value="@Model.Name" required maxlength="@AbpUserBase.MaxNameLength">
                </div>

                <div class="form-group">
                    <label for="Surname">@L("Surname")</label>
                    <input id="Surname" type="text" name="Surname" class="form-control" value="@Model.Surname" required maxlength="@AbpUserBase.MaxSurnameLength">
                </div>

                <div class="form-group">
                    <label for="EmailAddress">@L("EmailAddress")</label>
                    <input id="EmailAddress" type="email" name="EmailAddress" class="form-control" value="@Model.EmailAddress" required maxlength="@AbpUserBase.MaxEmailAddressLength">
                </div>
                @if (Model.CanVerifyPhoneNumber())
                {
                    <div class="form-group">
                        <label>@L("PhoneNumber")</label>
                        <div class="input-group">
                            <input id="PhoneNumber" type="text" name="PhoneNumber" class="form-control m-input" value="@Model.PhoneNumber" maxlength="@UserConsts.MaxPhoneNumberLength">
                            @if (!Model.IsPhoneNumberConfirmed)
                            {
                                <span id="SpanSmsVerificationUnverified" class="input-group-btn" data-original-title="@L("YourPhoneNumberIsNotVerified")">
                                    <button id="btnSmsVerification" class="btn btn-primary" type="button"><i class="la la-warning"></i> @L("Verify")</button>
                                </span>
                                <div class="input-group-append" id="SpanSmsVerificationVerified" style="display: none;" >
                                    <span class="input-group-text tooltips" data-original-title="@L("YourPhoneNumberIsVerified")">
                                        <i class="la la-check m--font-success" aria-label="@L("Verified")"></i>
                                    </span>
                                </div>
                            }
                            else
                            {
                                <div class="input-group-append">
                                    <span class="input-group-text tooltips" data-original-title="@L("YourPhoneNumberIsVerified")">
                                        <i class="la la-check m--font-success" aria-label="@L("Verified")"></i>
                                    </span>
                                </div>
                            }
                        </div>
                    </div>
                }
                else
                {
                    <div class="form-group">
                        <label for="PhoneNumber">@L("PhoneNumber") </label>
                        <input id="PhoneNumber" type="text" name="PhoneNumber" class="form-control edited" value="@Model.PhoneNumber" maxlength="@UserConsts.MaxPhoneNumberLength">
                    </div>
                }
                <div class="form-group">
                    <label for="UserName">@L("UserName")</label>
                    <input id="UserName" type="text" @Html.Raw(!Model.CanChangeUserName ? "disabled=\"disabled\"" : "") class="form-control edited" value="@Model.UserName" name="UserName" required maxlength="@AbpUserBase.MaxUserNameLength">
                    @if (!Model.CanChangeUserName)
                    {
                        <span class="m-form__help">@L("CanNotChangeAdminUserName")</span>
                    }
                </div>
                @if (Clock.SupportsMultipleTimezone)
                {
                    <div class="form-group">
                        <label for="Timezone">@L("Timezone")</label>
                        @Html.DropDownList("Timezone", Model.TimezoneItems.Select(i => i.ToSelectListItem()), new { @class = "form-control edited", id= "Timezone" })
                    </div>
                }
            </form>
        </div>
        <div class="tab-pane" id="TwoFactorLoginTab">
            <div>
                <h4>
                    Google Authenticator
                </h4>

                <div class="google-authenticator-enable" style="@(!Model.IsGoogleAuthenticatorEnabled ? "display:none" : "")">
                    <div>
                        @L("ScanQrCodeWithYourMobileApp")
                    </div>
                    <div class="text-center">
                        <img src="@Model.QrCodeSetupImageUrl" />
                    </div>
                    <small>
                        @L("GoogleAuthenticatorReferrerLink"): <a href="https://support.google.com/accounts/answer/1066447" target="_blank" rel="noopener noreferrer">Google Authenticator</a>
                    </small>
                </div>

                <div class="google-authenticator-enable" style="@(Model.IsGoogleAuthenticatorEnabled ? "display:none" : "")">
                    <button type="button" class="btn blue" id="btnEnableGoogleAuthenticator">@L("Enable")</button>
                </div>

            </div>
        </div>
    </div>
</div>
@await Html.PartialAsync("~/Areas/AppAreaName/Views/Common/Modals/_ModalFooterWithSaveAndCancel.cshtml")